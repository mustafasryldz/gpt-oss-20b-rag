services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:6333/healthz"]
      interval: 10s
      timeout: 3s
      retries: 10

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]    
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:11434/api/tags"]
      interval: 10s
      timeout: 3s
      retries: 10


  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: api
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./data:/data
      - hf_cache:/root/.cache/huggingface
    depends_on:
      qdrant:
        condition: service_started
      ollama:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 3s
      retries: 20
      
  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: ui
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      api:
        condition: service_started
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    depends_on:
      - api

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  qdrant_data:
  ollama_data:
  grafana_data:
  hf_cache:

